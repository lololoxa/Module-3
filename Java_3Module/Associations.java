package Java_3Module;

public class Associations {
/*          =============================== Associations ================================
    Ассоциация в ООП — это отношение между двумя классами, которое показывает,
что объекты одного класса связаны с объектами другого класса.

    Ассоциации могут быть однонаправленными или двунаправленными и могут иметь различную мощность
(один к одному, один ко многим, многие ко многим).

    Однонаправленная ассоциация указывает, что объекты одного класса знают о или используют объекты другого класса, но не наоборот.

    Двунаправленная ассоциация• означает, что объекты обоих классов могут взаимодействовать друг с другом.

    1. Агрегация — это специальный вид ассоциации, который представляет отношение "часть-целое" или "часть-контейнер",
где части могут существовать независимо от контейнера.
    Например, класс "Автомобиль" может содержать объекты класса "Колесо",
но колеса могут существовать отдельно от автомобиля. */

class Engine { // Агрегация
    void start() {
        System.out.println("Двигатель запущен.");
    }
}

    class Car {
        private Engine engine; // Агрегация

        Car(Engine engine) {
            this.engine = engine;
        }

        void start() {
            engine.start();
        }
    }


    /*2. Композиция — это более строгая форма агрегации, где части не могут существовать независимо от целого.
Если контейнер (целое) уничтожается, то и его части также уничтожаются.
Например, класс "Дом" может содержать объекты класса "Комната", которые не могут существовать без дома*/
 
    // Композиция
    class Room {
    }

    class House {
        private Room room; // Композиция

        House() {
            room = new Room();
        }
    }
}